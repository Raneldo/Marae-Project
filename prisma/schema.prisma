generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Locations {
  LocationID    Int             @id(map: "PK__tmp_ms_x__E7FEA477B605FBA4") @default(autoincrement())
  Name          String          @db.NVarChar(100)
  Address       String          @db.VarChar(100)
  Suburb        String?         @db.VarChar(100)
  Region        String          @db.NVarChar(100)
  Capacity      Int             @db.TinyInt
  Description   String?         @db.Text
  ParkingEvents ParkingEvents[]
  Users         Users[]
}

model ParkingEvents {
  EventID    Int       @id(map: "PK__ParkingE__7944C870FA4D2BB5") @default(autoincrement())
  LocationID Int
  VehicleID  Int
  EntryDate  DateTime  @db.Date
  EntryTime  DateTime
  ExitDate   DateTime? @db.Date
  ExitTime   DateTime?
  Locations  Locations @relation(fields: [LocationID], references: [LocationID], onUpdate: NoAction, map: "FK__ParkingEv__Locat__625A9A57")
  Vehicles   Vehicles  @relation(fields: [VehicleID], references: [VehicleID], onUpdate: NoAction, map: "FK__ParkingEv__Vehic__634EBE90")
}

model Users {
  UserID     Int       @id(map: "PK__Users__1788CCAC0F89D8FC") @default(autoincrement())
  Username   String    @unique(map: "UQ__Users__536C85E44932237E") @db.VarChar(75)
  Password   String    @db.VarChar(255)
  LocationID Int
  Locations  Locations @relation(fields: [LocationID], references: [LocationID], onUpdate: NoAction, map: "FK__Users__LocationI__3D2915A8")
}

model Vehicles {
  VehicleID     Int             @id(map: "PK__Vehicles__476B54B2B66EBE6F") @default(autoincrement())
  LicensePlate  String          @db.VarChar(10)
  ParkingEvents ParkingEvents[]
}
